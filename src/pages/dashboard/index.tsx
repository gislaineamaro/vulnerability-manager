import React, { useEffect, useState } from 'react'

import { Flex } from '@chakra-ui/react'
import LayoutBase from '../../components/layout-base'
import CardRisk from './components/cardRisk'
import CardActives from './components/cardActives'
import CardVulnerabilities from './components/cardVulnerabilities'
import './style.scss'
import AnaliticGraphics from '../../components/analiticGraphics'
import axios from 'axios'
import { Item } from 'framer-motion/types/components/Reorder/Item'

interface IDataSeverity {
  Baixo: number
  Médio: number
  Alto: number
  Crítico: number
}

interface ITopAssets {
  host: string
  vuln_count: number
}

const Dashboard = () => {
  const [severityData, setSeverityData] = useState<IDataSeverity>({
    Baixo: 0,
    Médio: 0,
    Alto: 0,
    Crítico: 0
  })
  const [topAssets, setTopAssets] = useState<ITopAssets[]>([])

  const severityChartData = [
    {
      label: 'Severidade',
      data: [
        severityData.Baixo,
        severityData.Médio,
        severityData.Alto,
        severityData.Crítico
      ],
      backgroundColor: '#36a3ebab'
    }
  ]

  const topAssetsChart = [
    {
      label: 'Vulnerabilidade',
      data: topAssets.map(item => item.vuln_count),
      backgroundColor: '#36a3ebab'
    }
  ]

  useEffect(() => {
    let acessToken = localStorage.getItem('token')

    fetchSeverityData(acessToken || '')
    fetchTopAssets(acessToken || '')
  }, [])

  const fetchSeverityData = (acessToken: string) => {
    axios
      .get(`${process.env.REACT_APP_API_URL}/api/dashboard/charts/severity`, {
        headers: {
          Authorization: 'Token ' + acessToken
        }
      })
      .then(response => {
        setSeverityData(response.data)
      })
      .catch(e => {
        console.log(
          'Erro ao requisitar o quantitativo de severidade por vulnerabilidade'
        )
      })
  }

  const fetchTopAssets = (acessToken: string) => {
    axios
      .get(`${process.env.REACT_APP_API_URL}/api/dashboard/charts/top-assets`, {
        headers: {
          Authorization: 'Token ' + acessToken
        }
      })
      .then(response => {
        setTopAssets(response.data)
      })
      .catch(e => {
        console.log(
          'Erro ao requisitar o quantitativo de severidade por vulnerabilidade'
        )
      })
  }

  return (
    <LayoutBase>
      <div className="contentDashboard">
        <Flex className="cardsBox">
          <CardRisk />
          <CardActives />
          <CardVulnerabilities />
        </Flex>
        <Flex
          className="graphicsBox"
          flexDirection="column"
          align="center"
          justify="space-between"
        >
          <Flex className="graphicBoxMenu">
            <AnaliticGraphics
              dataLabels={['Baixo', 'Médio', 'Alto', 'Crítico']}
              datasets={severityChartData}
              title="Quantitativo de vulnerabilidades por severidade"
            />
          </Flex>
          <Flex className="graphicBoxMenu">
            <AnaliticGraphics
              dataLabels={topAssets.map(item => item.host)}
              datasets={topAssetsChart}
              title="Top 10 ativos vulneráveis"
            />
          </Flex>
        </Flex>
      </div>
    </LayoutBase>
  )
}

export default Dashboard
